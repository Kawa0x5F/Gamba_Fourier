package example;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import javax.swing.JFrame;
import javax.swing.JComponent;
import javax.swing.SwingUtilities;

/**
 * 例題プログラム：この例題を改変して大きなプログラムを作る足がかりにしてください。
 */
@SuppressWarnings("serial")
public class Example extends JComponent
{
	/**
	 * 指定されたグラフィクスに対して、背景色（灰色）でビュー全体を塗り、その後に文字列を描画する。
	 * @param aGraphics グラフィックコンテキスト
	 */
	public void paintComponent(Graphics aGraphics)
	{
		// 自分（コンポーネント）自身の幅（width）と高さ（height）を取得する。
		Integer width = this.getWidth();
		Integer height = this.getHeight();

		// 背景色を設定してコンポーネント全体を塗りつぶす。
		aGraphics.setColor(Color.lightGray);
		aGraphics.fillRect(0, 0, width, height);

		// 文字列とフォントから幅（w）と高さ（h）を計算する。
		String aString = "京都産業大学";
		Font aFont = new Font("Serif", Font.PLAIN, 48);
		FontMetrics fontMetrics = this.getFontMetrics(aFont);
		Integer w = SwingUtilities.computeStringWidth(fontMetrics, aString);
		Integer h = aFont.getSize();

		// フォントと色を指定して文字列をコンポーネント（ウィンドウ）の中央に描く。
		aGraphics.setFont(aFont);
		aGraphics.setColor(Color.darkGray);
		Integer x = (width / 2) - (w / 2);
		Integer y = (height / 2) - (h / 2) + h;
		aGraphics.drawString(aString, x, y);

		return;
	}

	/**
	 * 例題のメインプログラム。
	 * @param arguments コマンドの引数列（文字列の配列）
	 */
	public static void main(String[] arguments)
	{
		// ウィンドウのインスタンスを生成する。
		JFrame aWindow = new JFrame("Example");

		// コンポーネントのインスタンスを生成してウィンドウに加える。
		Example aComponent = new Example();
		aWindow.add(aComponent);

		// 高さはタイトルバーの高さを考慮してウィンドウの大きさを決定する。
		aWindow.addNotify();
		int titleBarHeight = aWindow.getInsets().top;
		aWindow.setSize(600, 400 + titleBarHeight);
		aWindow.setResizable(true);

		// ウィンドウに各種の設定を行って出現させる。
		aWindow.setLocationRelativeTo(null);
		aWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		aWindow.setVisible(true);
		aWindow.toFront();

		return;
	}
}
